{% schema %}
{
  "name": "Product-grid-popup",
  "settings": [
    { "type": "product", "id": "product_1", "label": "Product 1" },
    { "type": "product", "id": "product_2", "label": "Product 2" },
    { "type": "product", "id": "product_3", "label": "Product 3" },
    { "type": "product", "id": "product_4", "label": "Product 4" },
    { "type": "product", "id": "product_5", "label": "Product 5" },
    { "type": "product", "id": "product_6", "label": "Product 6" }
  ],
  "presets": [
    { "name": "Product-grid-popup", "category": "Products" }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for i in (1..6) %}
    {% assign setting_id = "product_" | append: i %}
    {% assign product_handle = section.settings[setting_id] %}
    {% assign product = all_products[product_handle] %}

    {% if product %}
      <div class="product-card">
        <div class="product-card__image">
          <img src="{{ product.featured_image | img_url: '600x600' }}" alt="{{ product.title }}">
          <span 
            class="product-card__overlay quick-view-trigger" 
            data-product='{{ product | json | replace: "'", "&#39;" }}'
            data-image="{{ product.featured_image | img_url: '600x600' }}"
          >+</span>
        </div>
       
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Quick View Popup -->
<div id="quick-view-modal" class="quick-view-modal">
  <div class="quick-view-content">
    <span class="quick-view-close">&times;</span>
    <div class="quick-view-body">
      
      <!-- LEFT: IMAGE -->
      <div class="quick-view-image">
        <img id="qv-image" src="" alt="">
      </div>
      
      <!-- RIGHT: DETAILS -->
      <div class="quick-view-details">
        <h2 id="qv-title"></h2>
        <p id="qv-price"></p>
        <p id="qv-description"></p>
      </div>

    </div>
        
        <!-- COLOR VARIANTS -->
        <div class="variant-group">
          <label class="variant-label">Color</label>
          <div id="qv-colors" class="variant-options"></div>
        </div>
        
        <!-- SIZE VARIANTS -->
        <div class="variant-group">
          <label class="variant-label">Size</label>
          <select id="qv-sizes" class="variant-select"></select>
        </div>

        <!-- ADD TO CART -->
        <form id="qv-form">
          <input type="hidden" id="selected-variant-id" name="id">
          <button type="submit" class="qv-add-to-cart">ADD TO CART    â†’</button>
        </form>
      </div>
    </div>
 
</div>

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
  padding:50px;
}
.product-card {
  text-align: center;
  position: relative;
}
.product-card__image {
  position: relative;
}
.product-card__image img{
width:100%;}
.product-card__overlay {
  position: absolute;
  top: 10px;
  right: 10px;
  background: black;
  color: white;
  font-size: 20px;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  cursor: pointer;
}
.quick-view-modal {
  display: none;
  position: fixed; top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  justify-content: center; align-items: center;
  z-index: 9999;
}
.quick-view-content {
  background: #fff;
  padding: 20px;
  max-width: 460px;
  width: 95%;
  position: relative;
}
.quick-view-close {
  position: absolute; top: 10px; right: 15px;
  font-size: 22px; cursor: pointer;
}

/* --- Body Layout --- */
.quick-view-body {
  display: flex; gap: 20px; ;padding-top:20px
}
.quick-view-image img {
    max-width: 200px;
    height: -webkit-fill-available;
}
.quick-view-details {
  flex: 1;
}
.quick-view-details h2 {
  margin: 0 0 8px;
  font-size: 20px;
  font-weight: bold;
}
.quick-view-details p {
  margin: 0 0 12px;
}

/* --- Variant Styling --- */
.variant-group { margin: 15px 0; }
.variant-label { font-weight: bold; margin-bottom: 6px; display: block; }
.variant-options { display: flex;  justify-Content:center; }
.variant-btn {
    width:220px;
  padding: 6px 14px;
  border: 1px solid #ccc;
 
  cursor: pointer;
}
.variant-btn.selected {
  border-color: #000;
  background: #000;
  color: #fff;
}
.variant-select {
  width: 100%;
  padding: 8px;
  border: 1px solid #ccc;
  
}

/* --- Add to Cart --- */
.qv-add-to-cart {
  margin-top: 20px;
  width: 100%;
  background: #000;
  color: #fff;
  border: none;
  padding: 12px;
  font-size: 16px;
  {% comment %} border-radius: 4px; {% endcomment %}
  cursor: pointer;
}
.qv-add-to-cart:hover {
  background: #333;
}

@media (max-width: 767px) {
.product-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    padding: 30px 30px 10px 30px;
}
.product-grid {
  font-size:1rem;
}
.quick-view-content {
    max-width: 80%;
}
.quick-view-image img {
    max-width: 120px;
}
.quick-view-details {
    font-size: 11px;
}
.quick-view-details h2 {
    font-size: 15px;
}
.variant-label {
    font-size: 12px;
}
.variant-btn {
    font-size: 11px;
}
.variant-select {
    font-size: 10px;
}

.qv-add-to-cart {
    font-size: 11px;
   
}
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const modal = document.getElementById("quick-view-modal");
  const closeBtn = document.querySelector(".quick-view-close");

  const qvImage = document.getElementById("qv-image");
  const qvTitle = document.getElementById("qv-title");
  const qvPrice = document.getElementById("qv-price");
  const qvDescription = document.getElementById("qv-description");
  const qvColors = document.getElementById("qv-colors");
  const qvSizes = document.getElementById("qv-sizes");
  const selectedVariantInput = document.getElementById("selected-variant-id");

  let currentProduct = null;
  let selectedVariant = null;

  // Quick view trigger
  document.querySelectorAll(".quick-view-trigger").forEach(btn => {
    btn.addEventListener("click", function() {
      const product = JSON.parse(this.dataset.product);
      currentProduct = product;

      qvImage.src = this.dataset.image;
      qvTitle.textContent = product.title;
      qvPrice.textContent = (product.price / 100).toFixed(2) + " " + Shopify.currency.active;
      qvDescription.innerHTML = product.description || "";

      // Populate Color buttons
      qvColors.innerHTML = "";
      let colorIdx = product.options.indexOf("Color");
      if (colorIdx !== -1) {
        let colors = [...new Set(product.variants.map(v => v.options[colorIdx]))];
        colors.forEach(c => {
          let btn = document.createElement("div");
          btn.textContent = c;
          btn.classList.add("variant-btn");
          btn.dataset.value = c;
          qvColors.appendChild(btn);
        });
      }

      // Populate Size dropdown
      qvSizes.innerHTML = '<option value="">Choose your size</option>';
      let sizeIdx = product.options.indexOf("Size");
      if (sizeIdx !== -1) {
        let sizes = [...new Set(product.variants.map(v => v.options[sizeIdx]))];
        sizes.forEach(s => {
          let opt = document.createElement("option");
          opt.value = s;
          opt.textContent = s;
          qvSizes.appendChild(opt);
        });
      }

      // Default select first variant
      if (product.variants.length > 0) {
        selectVariant(product.variants[0]);
      }

      modal.style.display = "flex";
    });
  });

  // Color click
  qvColors.addEventListener("click", e => {
    if (e.target.classList.contains("variant-btn")) {
      document.querySelectorAll(".variant-btn").forEach(b => b.classList.remove("selected"));
      e.target.classList.add("selected");
      updateVariant();
    }
  });

  // Size change
  qvSizes.addEventListener("change", updateVariant);

  function updateVariant() {
    let selectedColor = qvColors.querySelector(".selected")?.dataset.value;
    let selectedSize = qvSizes.value;

    let match = currentProduct.variants.find(v => {
      return v.options.includes(selectedColor) && v.options.includes(selectedSize);
    });

    if (match) selectVariant(match);
  }

  function selectVariant(variant) {
    selectedVariant = variant;
    selectedVariantInput.value = variant.id;
    qvPrice.textContent = (variant.price / 100).toFixed(2) + " " + Shopify.currency.active;
  }

  // Add to cart
  document.getElementById("qv-form").addEventListener("submit", function(e) {
    e.preventDefault();
    if (!selectedVariant) return;

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ items: [{ id: selectedVariant.id, quantity: 1 }] })
    })
    .then(() => {
      fetch('/cart.js')
        .then(r => r.json())
        .then(cart => {
          const cartCountEl = document.querySelector(".cart-count, .cart-count-bubble, .header__cart-count");
          if (cartCountEl) cartCountEl.textContent = cart.item_count;
        });
      modal.style.display = "none";
    });
  });

  // Close
  closeBtn.addEventListener("click", () => modal.style.display = "none");
  window.addEventListener("click", e => { if (e.target === modal) modal.style.display = "none"; });
});
</script>

<script>
document.getElementById("qv-form").addEventListener("submit", function(e) {
  e.preventDefault();
  if (!selectedVariant) return;

  fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ items: [{ id: selectedVariant.id, quantity: 1 }] })
  })
  .then(() => {
    fetch('/cart.js')
      .then(r => r.json())
      .then(cart => {
        const cartCountEl = document.querySelector(
          ".cart-count, .cart-count-bubble span[aria-hidden='true'], .header__cart-count, .site-header__cart-count"
        );
        if (cartCountEl) {
          cartCountEl.textContent = cart.item_count;
        }
      });
    modal.style.display = "none";
  });
});
</script>
